UpdateId :: Int32 -- ^ The update‘s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you’re using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.
Message :: Maybe Message -- ^ New incoming message of any kind — text, photo, sticker, etc.
EditedMessage :: Maybe Message -- ^ New version of a message that is known to the bot and was edited
ChannelPost :: Maybe Message -- ^ New incoming channel post of any kind — text, photo, sticker, etc.
EditedChannelPost :: Maybe Message -- ^ New version of a channel post that is known to the bot and was edited
InlineQuery :: Maybe InlineQuery -- ^ New incoming inline query
ChosenInlineResult :: Maybe ChosenInlineResult -- ^ The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.
CallbackQuery :: Maybe CallbackQuery -- ^ New incoming callback query
ShippingQuery :: Maybe ShippingQuery -- ^ New incoming shipping query. Only for invoices with flexible price
PreCheckoutQuery :: Maybe PreCheckoutQuery -- ^ New incoming pre-checkout query. Contains full information about checkout



Id :: Int32 -- ^ Unique identifier for this user or bot
IsBot :: Bool -- ^ True, if this user is a bot
FirstName :: Text -- ^ User‘s or bot’s first name
LastName :: Maybe Text -- ^ User‘s or bot’s last name
Username :: Maybe Text -- ^ User‘s or bot’s username
LanguageCode :: Maybe Text -- ^ IETF language tag of the user's language

Id :: Int32 -- ^ Unique identifier for this chat. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.
Type :: Text -- ^ Type of chat, can be either “private”, “group”, “supergroup” or “channel”
Title :: Maybe Text -- ^ Title, for supergroups, channels and group chats
Username :: Maybe Text -- ^ Username, for private chats, supergroups and channels if available
FirstName :: Maybe Text -- ^ First name of the other party in a private chat
LastName :: Maybe Text -- ^ Last name of the other party in a private chat
AllMembersAreAdministrators :: Maybe Bool -- ^ True if a group has ‘All Members Are Admins’ enabled.
Photo :: Maybe ChatPhoto -- ^ Chat photo. Returned only in getChat.
Description :: Maybe Text -- ^ Description, for supergroups and channel chats. Returned only in getChat.
InviteLink :: Maybe Text -- ^ Chat invite link, for supergroups and channel chats. Returned only in getChat.
PinnedMessage :: Maybe Message -- ^ Pinned message, for supergroups. Returned only in getChat.
StickerSetName :: Maybe Text -- ^ For supergroups, name of group sticker set. Returned only in getChat.
CanSetStickerSet :: Maybe Bool -- ^ True, if the bot can change the group sticker set. Returned only in getChat.

MessageId :: Int32 -- ^ Unique message identifier inside this chat
From :: Maybe User -- ^ Sender, empty for messages sent to channels
Date :: Int32 -- ^ Date the message was sent in Unix time
Chat :: Chat -- ^ Conversation the message belongs to
ForwardFrom :: Maybe User -- ^ For forwarded messages, sender of the original message
ForwardFromChat :: Maybe Chat -- ^ For messages forwarded from channels, information about the original channel
ForwardFromMessageId :: Maybe Int32 -- ^ For messages forwarded from channels, identifier of the original message in the channel
ForwardSignature :: Maybe Text -- ^ For messages forwarded from channels, signature of the post author if present
ForwardDate :: Maybe Int32 -- ^ For forwarded messages, date the original message was sent in Unix time
ReplyToMessage :: Maybe Message -- ^ For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.
EditDate :: Maybe Int32 -- ^ Date the message was last edited in Unix time
MediaGroupId :: Maybe Text -- ^ The unique identifier of a media message group this message belongs to
AuthorSignature :: Maybe Text -- ^ Signature of the post author for messages in channels
Text :: Maybe Text -- ^ For text messages, the actual UTF-8 text of the message, 0-4096 characters.
Entities :: Maybe [MessageEntity] -- ^ For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text
CaptionEntities :: Maybe [MessageEntity] -- ^ For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption
Audio :: Maybe Audio -- ^ Message is an audio file, information about the file
Document :: Maybe Document -- ^ Message is a general file, information about the file
Game :: Maybe Game -- ^ Message is a game, information about the game. More about games »
Photo :: Maybe [PhotoSize] -- ^ Message is a photo, available sizes of the photo
Sticker :: Maybe Sticker -- ^ Message is a sticker, information about the sticker
Video :: Maybe Video -- ^ Message is a video, information about the video
Voice :: Maybe Voice -- ^ Message is a voice message, information about the file
VideoNote :: Maybe VideoNote -- ^ Message is a video note, information about the video message
Caption :: Maybe Text -- ^ Caption for the audio, document, photo, video or voice, 0-200 characters
Contact :: Maybe Contact -- ^ Message is a shared contact, information about the contact
Location :: Maybe Location -- ^ Message is a shared location, information about the location
Venue :: Maybe Venue -- ^ Message is a venue, information about the venue
NewChatMembers :: Maybe [User] -- ^ New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)
LeftChatMember :: Maybe User -- ^ A member was removed from the group, information about them (this member may be the bot itself)
NewChatTitle :: Maybe Text -- ^ A chat title was changed to this value
NewChatPhoto :: Maybe [PhotoSize] -- ^ A chat photo was change to this value
DeleteChatPhoto :: Maybe Bool -- ^ Service message: the chat photo was deleted
GroupChatCreated :: Maybe Bool -- ^ Service message: the group has been created
SupergroupChatCreated :: Maybe Bool -- ^ Service message: the supergroup has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.
ChannelChatCreated :: Maybe Bool -- ^ Service message: the channel has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.
MigrateToChatId :: Maybe Int32 -- ^ The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.
MigrateFromChatId :: Maybe Int32 -- ^ The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.
PinnedMessage :: Maybe Message -- ^ Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply.
Invoice :: Maybe Invoice -- ^ Message is an invoice for a payment, information about the invoice. More about payments »
SuccessfulPayment :: Maybe SuccessfulPayment -- ^ Message is a service message about a successful payment, information about the payment. More about payments »

Type :: Text -- ^ Type of the entity. Can be mention (@username), hashtag, bot_command, url, email, bold (bold text), italic (italic text), code (monowidth string), pre (monowidth block), text_link (for clickable text URLs), text_mention (for users without usernames)
Offset :: Int32 -- ^ Offset in UTF-16 code units to the start of the entity
Length :: Int32 -- ^ Length of the entity in UTF-16 code units
Url :: Maybe Text -- ^ For “text_link” only, url that will be opened after user taps on the text
User :: Maybe User -- ^ For “text_mention” only, the mentioned user

FileId :: Text -- ^ Unique identifier for this file
Width :: Int32 -- ^ Photo width
Height :: Int32 -- ^ Photo height
FileSize :: Maybe Int32 -- ^ File size

FileId :: Text -- ^ Unique identifier for this file
Duration :: Int32 -- ^ Duration of the audio in seconds as defined by sender
Performer :: Maybe Text -- ^ Performer of the audio as defined by sender or by audio tags
Title :: Maybe Text -- ^ Title of the audio as defined by sender or by audio tags
MimeType :: Maybe Text -- ^ MIME type of the file as defined by sender
FileSize :: Maybe Int32 -- ^ File size

FileId :: Text -- ^ Unique file identifier
Thumb :: Maybe PhotoSize -- ^ Document thumbnail as defined by sender
FileName :: Maybe Text -- ^ Original filename as defined by sender
MimeType :: Maybe Text -- ^ MIME type of the file as defined by sender
FileSize :: Maybe Int32 -- ^ File size

FileId :: Text -- ^ Unique identifier for this file
Width :: Int32 -- ^ Video width as defined by sender
Height :: Int32 -- ^ Video height as defined by sender
Duration :: Int32 -- ^ Duration of the video in seconds as defined by sender
Thumb :: Maybe PhotoSize -- ^ Video thumbnail
MimeType :: Maybe Text -- ^ Mime type of a file as defined by sender
FileSize :: Maybe Int32 -- ^ File size

FileId :: Text -- ^ Unique identifier for this file
Duration :: Int32 -- ^ Duration of the audio in seconds as defined by sender
MimeType :: Maybe Text -- ^ MIME type of the file as defined by sender
FileSize :: Maybe Int32 -- ^ File size

FileId :: Text -- ^ Unique identifier for this file
Length :: Int32 -- ^ Video width and height as defined by sender
Duration :: Int32 -- ^ Duration of the video in seconds as defined by sender
Thumb :: Maybe PhotoSize -- ^ Video thumbnail
FileSize :: Maybe Int32 -- ^ File size

PhoneNumber :: Text -- ^ Contact's phone number
FirstName :: Text -- ^ Contact's first name
LastName :: Maybe Text -- ^ Contact's last name
UserId :: Maybe Int32 -- ^ Contact's user identifier in Telegram

Longitude :: Float -- ^ Longitude as defined by sender
Latitude :: Float -- ^ Latitude as defined by sender

Location :: Location -- ^ Venue location
Title :: Text -- ^ Name of the venue
Address :: Text -- ^ Address of the venue
FoursquareId :: Maybe Text -- ^ Foursquare identifier of the venue

TotalCount :: Int32 -- ^ Total number of profile pictures the target user has
Photos :: [[PhotoSize]] -- ^ Requested profile pictures (in up to 4 sizes each)

FileId :: Text -- ^ Unique identifier for this file
FileSize :: Maybe Int32 -- ^ File size, if known
FilePath :: Maybe Text -- ^ File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file.

Keyboard :: [[KeyboardButton]] -- ^ Array of button rows, each represented by an Array of KeyboardButton objects
ResizeKeyboard :: Maybe Bool -- ^ Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard.
OneTimeKeyboard :: Maybe Bool -- ^ Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again. Defaults to false.
Selective :: Maybe Bool -- ^ Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.

Text :: Text -- ^ Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed
RequestContact :: Maybe Bool -- ^ If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only
RequestLocation :: Maybe Bool -- ^ If True, the user's current location will be sent when the button is pressed. Available in private chats only

RemoveKeyboard :: Bool -- ^ Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use one_time_keyboard in ReplyKeyboardMarkup)
Selective :: Maybe Bool -- ^ Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.

InlineKeyboard :: [[InlineKeyboardButton]] -- ^ Array of button rows, each represented by an Array of InlineKeyboardButton objects

Text :: Text -- ^ Label text on the button
Url :: Maybe Text -- ^ HTTP url to be opened when button is pressed
CallbackData :: Maybe Text -- ^ Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes
SwitchInlineQuery :: Maybe Text -- ^ If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot‘s username and the specified inline query in the input field. Can be empty, in which case just the bot’s username will be inserted.

SwitchInlineQueryCurrentChat :: Maybe Text -- ^ If set, pressing the button will insert the bot‘s username and the specified inline query in the current chat's input field. Can be empty, in which case only the bot’s username will be inserted.

CallbackGame :: Maybe CallbackGame -- ^ Description of the game that will be launched when the user presses the button.

Pay :: Maybe Bool -- ^ Specify True, to send a Pay button.

Id :: Text -- ^ Unique identifier for this query
From :: User -- ^ Sender
Message :: Maybe Message -- ^ Message with the callback button that originated the query. Note that message content and message date will not be available if the message is too old
InlineMessageId :: Maybe Text -- ^ Identifier of the message sent via the bot in inline mode, that originated the query.
ChatInstance :: Text -- ^ Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.
Data :: Maybe Text -- ^ Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field.
GameShortName :: Maybe Text -- ^ Short name of a Game to be returned, serves as the unique identifier for the game

ForceReply :: Bool -- ^ Shows reply interface to the user, as if they manually selected the bot‘s message and tapped ’Reply'
Selective :: Maybe Bool -- ^ Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.


SmallFileId :: Text -- ^ Unique file identifier of small (160x160) chat photo. This file_id can be used only for photo download.
BigFileId :: Text -- ^ Unique file identifier of big (640x640) chat photo. This file_id can be used only for photo download.

User :: User -- ^ Information about the user
Status :: Text -- ^ The member's status in the chat. Can be “creator”, “administrator”, “member”, “restricted”, “left” or “kicked”
UntilDate :: Maybe Int32 -- ^ Restictred and kicked only. Date when restrictions will be lifted for this user, unix time
CanBeEdited :: Maybe Bool -- ^ Administrators only. True, if the bot is allowed to edit administrator privileges of that user
CanChangeInfo :: Maybe Bool -- ^ Administrators only. True, if the administrator can change the chat title, photo and other settings
CanPostMessages :: Maybe Bool -- ^ Administrators only. True, if the administrator can post in the channel, channels only
CanEditMessages :: Maybe Bool -- ^ Administrators only. True, if the administrator can edit messages of other users and can pin messages, channels only
CanDeleteMessages :: Maybe Bool -- ^ Administrators only. True, if the administrator can delete messages of other users
CanInviteUsers :: Maybe Bool -- ^ Administrators only. True, if the administrator can invite new users to the chat
CanRestrictMembers :: Maybe Bool -- ^ Administrators only. True, if the administrator can restrict, ban or unban chat members
CanPinMessages :: Maybe Bool -- ^ Administrators only. True, if the administrator can pin messages, supergroups only
CanPromoteMembers :: Maybe Bool -- ^ Administrators only. True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)
CanSendMessages :: Maybe Bool -- ^ Restricted only. True, if the user can send text messages, contacts, locations and venues
CanSendMediaMessages :: Maybe Bool -- ^ Restricted only. True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages
CanSendOtherMessages :: Maybe Bool -- ^ Restricted only. True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages
CanAddWebPagePreviews :: Maybe Bool -- ^ Restricted only. True, if user may add web page previews to his messages, implies can_send_media_messages

MigrateToChatId :: Maybe Int32 -- ^ The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.
RetryAfter :: Maybe Int32 -- ^ In case of exceeding flood control, the number of seconds left to wait before the request can be repeated

Type :: Text -- ^ Type of the result, must be photo
Media :: Text -- ^ File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass "attach://<file_attach_name>" to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »
Caption :: Maybe Text -- ^ Caption of the photo to be sent, 0-200 characters

Type :: Text -- ^ Type of the result, must be video
Media :: Text -- ^ File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass "attach://<file_attach_name>" to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »
Caption :: Maybe Text -- ^ Caption of the video to be sent, 0-200 characters
Width :: Maybe Int32 -- ^ Video width
Height :: Maybe Int32 -- ^ Video height
Duration :: Maybe Int32 -- ^ Video duration

